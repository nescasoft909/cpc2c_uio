<?php
  /* vim: set expandtab tabstop=4 softtabstop=4 shiftwidth=4:
  Codificación: UTF-8
  +----------------------------------------------------------------------+
  | Elastix version 2.2.0-25                                               |
  | http://www.elastix.org                                               |
  +----------------------------------------------------------------------+
  | Copyright (c) 2006 Palosanto Solutions S. A.                         |
  +----------------------------------------------------------------------+
  | Cdla. Nueva Kennedy Calle E 222 y 9na. Este                          |
  | Telfs. 2283-268, 2294-440, 2284-356                                  |
  | Guayaquil - Ecuador                                                  |
  | http://www.palosanto.com                                             |
  +----------------------------------------------------------------------+
  | The contents of this file are subject to the General Public License  |
  | (GPL) Version 2 (the "License"); you may not use this file except in |
  | compliance with the License. You may obtain a copy of the License at |
  | http://www.opensource.org/licenses/gpl-license.php                   |
  |                                                                      |
  | Software distributed under the License is distributed on an "AS IS"  |
  | basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See  |
  | the License for the specific language governing rights and           |
  | limitations under the License.                                       |
  +----------------------------------------------------------------------+
  | The Original Code is: Elastix Open Source.                           |
  | The Initial Developer of the Original Code is PaloSanto Solutions    |
  +----------------------------------------------------------------------+
  $Id: paloSantoReportedeCalltypes.class.php,v 1.1 2012-07-05 10:07:39 Juan Pablo Romero jromero@palosanto.com Exp $ */
class paloSantoReportedeCalltypes{
    var $_DB;
    var $errMsg;

    function paloSantoReportedeCalltypes(&$pDB)
    {
        // Se recibe como parámetro una referencia a una conexión paloDB
        if (is_object($pDB)) {
            $this->_DB =& $pDB;
            $this->errMsg = $this->_DB->errMsg;
        } else {
            $dsn = (string)$pDB;
            $this->_DB = new paloDB($dsn);

            if (!$this->_DB->connStatus) {
                $this->errMsg = $this->_DB->errMsg;
                // debo llenar alguna variable de error
            } else {
                // debo llenar alguna variable de error
            }
        }
    }

    /*HERE YOUR FUNCTIONS*/
    function getNumReportedeCalltypes($filter_field, $filter_value, $id_campania)
    {
	// En caso se haga uso del filtro.
	$where = '';
	if(isset($filter_field) && isset($filter_value)){
	    $where = " AND $filter_field LIKE '$filter_value%'";
	}

	// Tomo todas las cédulas sin repetir para conocer cuales han sido gestionados.
	$query   = "SELECT distinct ci
		    FROM _view_reporte_calltype
		    WHERE 
		    id_campania = $id_campania
		    $where";		    

        $result=$this->_DB->fetchTable($query, false);

        if($result==FALSE){
            $this->errMsg = $this->_DB->errMsg;
            return 0;
        }
        return sizeof($result);
    }

    function getReportedeCalltypes($limit, $offset, $filter_field, $filter_value, $id_campania)
    {
	// En caso se haga uso del filtro.
	$where = '';
	if(isset($filter_field) && isset($filter_value)){
	    $where = " AND $filter_field LIKE '$filter_value%'";
	}

	// Primero obtengo todas las cédula de clientes gestionados (con limit y offset)
	$query   = "SELECT distinct ci
		    FROM _view_reporte_calltype
		    WHERE 
		    id_campania = $id_campania
		    $where
		    LIMIT $limit
		    OFFSET $offset";		    
        $result_ci = $this->_DB->fetchTable($query, true);

	foreach($result_ci as $arrCi){
	    $query   = "SELECT * FROM _view_reporte_calltype 
			WHERE 
			ci = '$arrCi[ci]' AND 
			id_campania = $id_campania
			ORDER BY peso DESC, fecha DESC";
	    $result = $this->_DB->getFirstRowQuery($query, true);
	    $arrResult[] = $result;
	}

        if($result==FALSE){
            $this->errMsg = $this->_DB->errMsg;
            return array();
        }
        return $arrResult;	
    }

    /*
    function getReportedeCalltypesById($id)
    {
        $query = "SELECT * FROM _view_reporte_calltype WHERE id=?";

        $result=$this->_DB->getFirstRowQuery($query, true, array($id));

        if($result==FALSE){
            $this->errMsg = $this->_DB->errMsg;
            return null;
        }
        return $result;
	
    }
    */

    function actualizarCampaniaCliente()
    {
	$query = "SELECT id 
		  FROM campania_cliente
		  WHERE ultimo_calltype IS NOT null";
	$result=$this->_DB->fetchTable($query, true, $arrParam);
        if($result==FALSE){
            $this->errMsg = $this->_DB->errMsg;
            return false;
        }

	foreach($result as $k => $arrCampaniaCliente){
	    $query = "SELECT a.id as id_gestion, a.id_campania_cliente, a.calltype, c.peso, a.fecha 
		      FROM gestion_campania AS a, calltype_campania AS b, calltype AS c 
		      WHERE 
		      a.calltype = b.id_calltype AND 
		      b.id_calltype = c.id AND
		      a.id_campania_cliente = $arrCampaniaCliente[id]
		      ORDER BY peso DESC LIMIT 1";

	    $resultCallType = $this->_DB->getFirstRowQuery($query,true);

	    if($resultCallType==FALSE){
		$this->errMsg = $this->_DB->errMsg;
		return false;
	    }	    
	    $update = "UPDATE campania_cliente 
		       SET id_gestion_mejor_calltype = $resultCallType[id_gestion] 
		       WHERE id = $resultCallType[id_campania_cliente]";
	    $this->_DB->genQuery($update);
	}
    }

    function getDatosGestion($id_gestion)
    {
	$query = "SELECT b.etiqueta,a.valor 
		  FROM gestion_campania_detalle AS a, form_field AS b
		  WHERE a.id_gestion_campania = $id_gestion
		  AND a.id_form_field = b.id";

	$result=$this->_DB->fetchTable($query, true, $arrParam);
        if($result==FALSE){
            $this->errMsg = $this->_DB->errMsg;
            return false;
        }
	return $result;
    }

    function getCampaniasActivas()
    {
	$query = "SELECT id,nombre 
		  FROM campania 
		  WHERE tipo = 'ORIGINAL' AND 
		  status = 'A'";

	$result=$this->_DB->fetchTable($query, true, $arrParam);
        if($result==FALSE){
            $this->errMsg = $this->_DB->errMsg;
            return false;
        }

	foreach($result as $row){
	    $arrCampanias[$row['id']] = $row['nombre'];
	}
	return $arrCampanias;
    }
    
    function getColumnasAdicionales($id_campania)
    {
	$query = "SELECT distinct UCASE(descripcion) as descripcion
		  FROM cliente_adicional 
		  WHERE ci in(
		      SELECT ci 
		      FROM campania_cliente 
		      WHERE id_campania_consolidada = $id_campania
		      )";

	$result=$this->_DB->fetchTable($query, true);

        if($result==FALSE){
            $this->errMsg = $this->_DB->errMsg;
            return false;
        }

	foreach($result as $row){
	    $arrColumnas[] = $row['descripcion'];
	}	
	return $arrColumnas;	
    }

    function getDatosAdicionales($ci)
    {
	$query = "SELECT UCASE(descripcion) AS descripcion, adicional 
		  FROM cliente_adicional 
		  WHERE ci = '$ci'";
	
	$result=$this->_DB->fetchTable($query, true);

        if($result==FALSE){
            $this->errMsg = $this->_DB->errMsg;
            return false;
        }

	foreach($result as $k => $adicional){
	    $arrDatosAdicionales[$adicional['descripcion']] = $adicional['adicional'];
	}
	return $arrDatosAdicionales;
    }
}
?>